return {
	"nvim-treesitter/nvim-treesitter",
	build = ":TSUpdate",
	event = { "BufReadPost", "BufNewFile" },
	dependencies = {
		"nvim-treesitter/nvim-treesitter-textobjects",
		"JoosepAlviste/nvim-ts-context-commentstring",
	},
	config = function()
		require("nvim-treesitter.configs").setup({
			highlight = {
				enable = true,
				additional_vim_regex_highlighting = false,
			},
			ensure_installed = {
				"astro",
				"bash",
				"c",
				"css",
				"cpp",
				"cuda",
				"dart",
				"dockerfile",
				"go",
				"graphql",
				"hcl",
				"html",
				"http",
				"java",
				"javascript",
				"json",
				"latex",
				"lua",
				"markdown",
				"markdown_inline",
				"ninja",
				"nix",
				"norg",
				"perl",
				"php",
				"python",
				"regex",
				"ruby",
				"rust",
				"scss",
				"sql",
				"svelte",
				"swift",
				"toml",
				"tsx",
				"typescript",
				"vim",
				"vue",
				"yaml",
				"zig",
				"yuck",
				"ron",
				"git_config",
				"git_rebase",
				"gitattributes",
				"gitcommit",
				"gitignore",
				"gomod",
				"gosum",
				"haskell",
				"jsdoc",
				"jsonnet",
				"make",
				"org",
				"passwd",
				"prisma",
				"rasi",
				"todotxt",
			},
			autotag = { enable = true },
			incremental_selection = {
				enable = true,
				keymaps = {
					init_selection = "gnn",
					node_incremental = "grn",
					scope_incremental = "grc",
					node_decremental = "grm",
				},
			},
			indent = { enable = true },
			context_commentstring = { enable = true },
			textobjects = {
				lsp_interop = {
					enable = true,
				},
				select = {
					enable = true,
					lookahead = true, -- Automatically jump forward to textobj, similar to targets.vim
					keymaps = {
						-- You can use the capture groups defined in textobjects.scm
						["af"] = "@function.outer",
						["if"] = "@function.inner",
						["ac"] = "@class.outer",
						["ic"] = "@class.inner",
					},
				},
				move = {
					enable = true,
					set_jumps = false, -- whether to set jumps in the jumplist
					goto_next_start = {
						["]m"] = "@function.outer",
						["]]"] = "@class.outer",
					},
					goto_next_end = {
						["]M"] = "@function.outer",
						["]["] = "@class.outer",
					},
					goto_previous_start = {
						["[m"] = "@function.outer",
						["[["] = "@class.outer",
					},
					goto_previous_end = {
						["[M"] = "@function.outer",
						["[]"] = "@class.outer",
					},
				},
			},
		})
	end,
}
